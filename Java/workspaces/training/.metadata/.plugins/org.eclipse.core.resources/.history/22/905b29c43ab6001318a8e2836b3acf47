package com.binarysearch.emp;

import java.util.Arrays;
import java.util.InputMismatchException;
import java.util.Scanner;

import com.binarysearch.bean.Employee;

public class EmployeeDetails {

	public static void main(String[] args) {
		EmployeeDetails ed = new EmployeeDetails();
		Object[] emp = ed.input();
		Object SearchKey = ed.inputOfSearchKey();
		if (SearchKey != null) {
			if (ed.BinarySearch(emp, SearchKey,)) {
				System.out.println("The Employee found");
			} else {
				System.out.println("The Employee Not found");
			}
		} else {
			System.out.println("Sorry try again...!");
		}

	}

	public boolean BinarySearch(Object[] Elements, Object searchKey) {
		Employee[] emp = (Employee[]) Elements;
		boolean result = false;
		Employee Key = (Employee) searchKey;
		Object RequiredElements[] = null;
		if ((Key.getEmpId()) != 0) {
			RequiredElements = new Integer[emp.length];
			for (int i = 0; i < emp.length; i++) {
				RequiredElements[i] = emp[i].getEmpId();
			}
		} else if ((Key.getEmpName()) != null) {
			RequiredElements = new String[emp.length];
			for (int i = 0; i < emp.length; i++) {
				RequiredElements[i] = emp[i].getEmpName();
			}
		} else {
			System.out.println(" Sorry Try Again...!");
			return false;
		}
		if ((Key.getEmpId() != 0) || (Key.getEmpName() != null)) {
			int condition = 0;
			int first = 0;
			int len = RequiredElements.length;
			Arrays.sort(RequiredElements);
			while (first < len) {
				int mid = (first + len) / 2;
				condition = m.checkCodition(RequiredElements[mid], searchKey);
				if (condition == 0) {
					return true;
				} else if (condition > 0) {

					len = mid;
				} else {
					first = mid + 1;
				}
			}
			return false;
		}
		return result;
	}

	public Object inputOfSearchKey() {
		Scanner s = new Scanner(System.in);
		boolean condition = true;
		Object searchkey = null;
		while (condition) {
			System.out.println("\n\n1.Search through ID:");
			System.out.println("\n\n2.Search through Name:");
			System.out.println("\n\n\n");
			System.out.print("Enter the Option:\t");
			int option = s.nextInt();
			if (option == 1) {
				System.out.print("\nEnter Key To Search:\t");
				int key = s.nextInt();
				searchkey = new Employee(key);
				condition = false;
			} else if (option == 2) {
				System.out.print("\nEnter Key To Search:\t");
				String key = s.next();
				searchkey = new Employee(key);
				condition = false;
			} else {
				System.out.println("");
				condition = false;
			}
		}
		return searchkey;
	}

	public Object[] input() {
		Scanner s = new Scanner(System.in);
		System.out.print("How many records do you want to Enter:\t");
		int len = 0;
		try {
			len = s.nextInt();
		} catch (InputMismatchException e) {
			System.out
					.println("\n\nnumber of records should me Number\n\n sorry try again...!");
			System.exit(0);
		}
		Object[] emp = new Employee[len];
		System.out.println("Enter the Employee Details");
		for (int i = 0; i < emp.length; i++) {
			int id = 0;
			try {
				System.out.print("\n\nEnter The ID " + (i + 1) + " :");
				id = s.nextInt();
			} catch (InputMismatchException e) {
				System.out.println("\n\n\n\nID Should be Number");
				System.out.println("Sorry Try Again....!");
				System.exit(0);
			}
			System.out.print("Enter The Name " + (i + 1) + " :");
			String name = s.next();
			emp[i] = new Employee(id, name);
		}
		return emp;
	}

}
