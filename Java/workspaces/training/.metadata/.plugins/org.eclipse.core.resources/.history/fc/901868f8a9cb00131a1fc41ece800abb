package com.bank_transaction.thread;

import java.io.File;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;


public class BankTransaction_Using_Threads {
	public static void main(String[] args) {
		System.out.println("Main Begin");
		List<Thread> threads=
//		ExecutorService service = Executors.newFixedThreadPool(2);
		File folder = new File("/home/praveen/Desktop/works/Banking using threads/");
		File[] listOfFiles = folder.listFiles();

		for (File file : listOfFiles) {
			if (file.isFile()) {
				Task task=new Task(file.getName());
				Thread t=new Thread(task);
				
//				service.submit(new Task(file.getName()));
			}
		}
		System.out.println("Main Over");
	}
}	
	
final class Task implements Runnable{
    private String taskId;
 
    public Task(String s){
        this.taskId = s;
    }
	  
    @Override
    public void run() {
    	for(int i=0;i<10;i++)
	    {
	    	try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
	    }
	    System.out.println("The File name"+taskId+" printed by Thread"+Thread.currentThread().getName());
	    System.out.println("thread over");
    }
}
